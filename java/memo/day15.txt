추상 클래스
   필드 안에 구현이 안된 메소드가 선언되어 있는 클래스를 추상 클래스라고 한다.
   이 때 구현되지 않은 메소드를 추상 메소드라고 부른다.
   반드시 재정의를 통해 구현해야 메모리에 할당되기 때문에
   "강제성"을 부여하기 위해서 추상 메소드로 선언한다.

추상 클래스 선언
   abstract class 클래스명 {
      abstract 리턴타입 메소드명(자료형 매개변수,..);
      **일반 메소드도 선언 가능
   }
===============================================================================
인터페이스 : 틀
   추상 클래스를 고도화 시킨 문법
   상수와 추상메소드만 존재한다.
   구현은 인터페이스를 지정한 클래스에서 진행하고,
   인터페이스를 다른 클래스에 지정할 때에는 implements 키워드를 사용한다.
------------------------------------------------------------------------------
추상 클래스와 인터페이스 간의 관계
   인터페이스를 클래스에 바로 지정하면 모든 메소드에 강제성이 부여되어서
   전부 다 구현해야 한다. 하지만 일반적인 상황에서는 모든 것이 아닌,
   필요한 메소드를 골라서 재정의해야한다.
   인터페이스를 직접 지정하지 않고 다른 클래스에 지정한 후 바디를 만들어 놓는다면,
   강제성이 소멸되고 이 클래스를 상속받아서 필드를 구현한다면, 골라서 재정의할 수 있게 된다.
   이 때 중간에서 강제성을 없애주는 클래스를 추상 클래스로 선언하며, 클래스 이름 뒤에
   Adapter를 붙여서 목적을 알려준다.
















