1. 요구사항 분석
	꽃 테이블과 화분 테이블 2개가 필요하고,
	꽃을 구매할 때 화분도 같이 구매합니다.
	꽃은 이름과 색상, 가격이 있고,
	화분은 제품번호, 색상, 모양이 있습니다.
	화분은 모든 꽃을 담을 수 없고 맞는 꽃들을 담아야 합니다.

2. 개념적 설계
	꽃	화분
	-----------
	이름	제품번호
	색상	색상
	가격	모양
		이름
		색상

3. 논리적 설계
	꽃	화분
	---------------
	이름P	제품번호P
	색상P	
	---------------
	가격	색상
		모양
		이름F
		색상F

4. 물리적 설계
	FLOWER
	-------------------------------------------
	FLOWER_NAME : VARCHAR2(1000) : PRIMARY KEY
	FLOWER_COLOR : VARCHAR2(1000) : PRIMARY KEY
	-------------------------------------------
	FLOWER_PRICE : NUMBER


	POT
	-------------------------------------------
	POT_NUMBER : NUMBER : PRIMARY KEY
	-------------------------------------------
	POT_COLOR : VARCHAR2(1000)
	POT_SHAPE : VARCHAR2(1000)
	FLOWER_NAME : VARCHAR2(1000) : FOREIGN KEY
	FLOWER_COLOR : VARCHAR2(1000) : FOREIGN KEY
	
5. 구현
------------------------------------------------------------------------
 - DML(Data Manipulation Language) : 데이터 조작어
	1. SELECT : 조회(검색)
		1) 원하는 컬럼을 골라서 조회할 때
		SELECT [컬럼명1, 컬럼명2, ...] FROM [테이블명] WHERE 조건식;
		
		2) 전체 컬럼을 조회할 때, 대신 컬럼명을 직접 작성하는 것보다는 느리다.
		SELECT * FROM [테이블명] WHERE 조건식;

	2. INSERT
		1) 컬럼을 생략할 수 있다, 이 때 default 제약조건이 발동된다.
		INSERT INTO [테이블명]
		([컬럼명1], [컬럼명2], [...])
		VALUES([값1], [값2], [...]);

		2) 모든 값을 전부 작성해야 되며, 컬럼명은 직접 작성하지 않는다.
		INSERT INTO [테이블명]
		VALUES([값1], [값2], [...]);

	3. UPDATE : 수정
		UPDATE [테이블명]
		SET [기존 컬럼명1] = [새로운 값], [기존 컬럼명2] = [새로운 값]
		WHERE 조건식;

	4. DELETE : 삭제
		DELETE FROM [테이블명] WHERE 조건식;
------------------------------------------------------------------------
조건식 : 참 또는 거짓 둘 중 하나가 나오는 식
	>, < : 초과, 미만
	>=, <= : 이상, 이하
	= : 같다
	<>, !=, ^= : 같지 않다
	AND : 둘 다 참이면 참
	OR : 둘 중 하나라도 참이면 참

※ 위 연산자들은 WHERE절에서 사용가능하다.
------------------------------------------------------------------------
























