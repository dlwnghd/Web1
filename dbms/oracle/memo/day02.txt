RDBMS(관계형 데이터베이스 시스템)
	테이블끼리 서로 관계를 맺을 수 있다.

Table A(User, Profile, Member)		Table B(Order, Task, Delivery, Goods)

번호	이름	나이	아이디		주문번호		번호	날짜		상품수량
1	한동석	20	hds1234		20220328001	4	2022-03-28	목도리,3
2	진현성	21	jhs1234		20220327009	4	2022-03-27	컴퓨터,2
3	조수민	22	jsm1234		20220327008	3	2022-03-27	닌텐도,1
4	이주홍	23	ljh1234		20220326002	2	2022-03-26	페라리,7

이러한 구조를 가지는 것을 Table, Relation(오라클), Class라고 부른다.

COLUMN(열, 속성, 필드)
	공통된 값들의 주제

ROW(행, 레코드, 튜플)
	하나의 정보

PRIMARY KEY(PK)
	고유한 값
	각 행의 구분점으로 사용된다.
	중복이 없고 NULL값을 허용하지 않는다.
	*NULL: 아직 어떤 값을 넣을 지 모르겠다는 의미로 넣는 값.


FOREIGN KEY(FK)
	다른 테이블의 PK를 의미한다.
	보통 테이블끼리 관계를 맺을 때 사용한다.
	중복이 가능하다.


조합키
	하나의 테이블에 2개 이상의 PK가 설정되어 있는 경우.
	하나의 PK는 중복이 가능하지만, 두 개이상의 PK모두가 중복이 된다면 안된다.

	PK	PK
	1	a(가능)
	1	b(가능)
	2	c(불가능)
	2	c(불가능)
	3	d(가능)
	4	d(가능)

UNIQUE KEY(UK)
	NULL은 허용하지만 중복을 허용하지 않는다.
---------------------------------------------------------------------------------
컴파일 언어와 스크립트 언어
 - 컴파일 언어(JAVA, C언어, C++,..)
	파일 단위로 해석한다(일괄처리).
	수정이 거의 없을 때 효율적이다.
	번역 파일이 생성된다.

 - 스크립트 언어(CSS, JS, SQL, 파이썬,..)
	한 줄 단위로 해석한다(개별처리).
	빈번한 수정 시 효율적이다.
	번역 파일이 따로 생성되지 않고, 번역 하자 마자 실행된다.

SQL문(쿼리문) - DDL, DML, DCL, TCL
	스크립트 언어.
	DBMS와 소통하는 언어.

 - DDL(Data Definition Language) : 데이터 정의어
	테이블 조작, 제어 관련 쿼리문

	1. CREATE : 테이블 생성
		CREATE TABLE [테이블명](
			[컬럼명] [자료형(용량)] [제약조건],
			...	
		);

	2. DROP : 테이블 삭제
		DROP TABLE [테이블명];

	3. ALTER : 테이블 수정
		ALTER TABLE [테이블명] 
		- 테이블 명 수정 : RENAME TO [새로운 테이블명];
		- 컬럼 추가 : ADD([새로운 컬럼명] [자료형(용량)]);
		- 컬럼명 변경 : RENAME COLUMN [기존 컬럼명] TO [새로운 컬럼명];
		- 컬럼 삭제 : DROP COLUMN [기존 컬럼명];
		- 컬럼 수정 : MODIFY([기존 컬럼명] [자료형(용량)]);

	4. TRUNCATE : 테이블 내용 전체 삭제
		TRUNCATE TABLE [테이블명];

 - 자료형(TYPE) : 용량은 항상 넉넉하게 주도록 한다.
	
	숫자
		NUMBER(precision) : 정수
		NUMBER(precision, 소수점 자리수) : 실수
	문자열
		CHAR(용량) : 고정형
			CHAR(4)에 'A'를 넣으면 A^^^ 빈 자리가 공백으로 채워진다.
			형식을 정한 날짜, 주민등록번호, 성별처럼 글자 수가 절대 변하지 않는 값을 넣는다.

		VARCHAR(용량), VARCHAR2(용량) : 가변형
			값의 길이 만큼 공간이 배정된다. 글자 수에 변화가 있는 값을 넣는다.
	날짜
		DATE : FORMAT에 맞춰서 날짜를 저장하는 타입
----------------------------------------------------------------------------------------
무결성
	데이터의 정확성, 일관성, 유효성이 유지되는 것.

	정확성 : 데이터는 애매하지 않아야 한다.
	일관성 : 각 사용자가 일관된 데이터를 볼 수 있도록 해야 한다.
	유효성 : 데이터가 실제 존재하는 데이터여야 한다.

1. 개체 무결성
	모든 테이블은 PK가 존재해야 한다.

2. 참조 무결성
	두 테이블의 데이터가 항상 일관된 값을 가지도록 유지하는 것.

3. 도메인 무결성
	컬럼의 타입, NULL값의 허용 등에 대한 사항 정의하고
	올바른 데이터가 입력되었는 지를 확인하는 것.
------------------------------------------------------------------------------------
모델링(기획)
	추상적인 주제를 RDBMS에 맞게 설계하는 것.

1. 요구사항 분석
	회원, 주문, 상품 : 3가지를 관리하고자 한다.

2. 개념적 설계(개념 모델링)
	회원	주문	상품
	--------------------
	아이디	주문번호	상품번호
	비밀번호	주문날짜	상품명
	이름	아이디	가격
	주소	상품번호	재고량
	이메일
	생일

3. 논리적 설계(논리 모델링)
	회원	주문	상품
	--------------------
	아이디P	주문번호P	상품번호P
	--------------------
	비밀번호	주문날짜	상품명
	이름	아이디F	가격
	주소	상품번호F	재고량
	이메일U
	생일

4. 물리적 설계(물리 모델링)
	
	TBL_USER
	----------------------------------------
	USER_ID : VARCHAR2(100) : PRIMARY KEY
	----------------------------------------
	USER_PW : VARCHAR2(100)
	USER_NAME : VARCHAR2(100)
	USER_ADDRESS : VARCHAR2(300)
	USER_EMAIL : VARCHAR2(200) : UNIQUE
	USER_BIRTH : DATE

5. 구현
























