옵티마이저(OPTIMIZER)
	COST : 예상 수행 시간, 쿼리를 수행하는 데 소요되는 일량 또는 시간
	CARDINALITY : 실행 결과의 건수

	SQL을 가장 빠르고 효율적으로 수행할 최적의 처리경로(최저비용)를 생성해주는 DBMS 내부의 핵심 엔진.
	사용자가 쿼리문(SQL)으로 결과를 요청하면, 이를 생성하는 데 필요한 처리 경로는 DBMS에 내장된
	옵티마이저가 자동으로 생성한다.
	옵티마이저가 생성한 SQL처리 경로를 실행 계획(Execution Plan)이라고 한다.

옵티마이저의 SQL의 최적화 과정
	사용자가 작성한 쿼리 수행을 위해, 실행될 만한 실행 계획을 찾는다.
	데이터 딕셔너리에 미리 수집해 놓은 오브젝트 통계 및 시스템 통계 정보를 이용해서
	각 실행 계획의 예상 비용을 산정한다.
	각 실행계획을 비교해서 최저 비용을 갖는 하나를 선택하여 실행한다.

옵티마이저의 종류(Rule Based Optimizer, Cost Based Optimizer)
	1. 규칙기반 옵티마이저(RBO), 휴리스틱(Heuristic) 옵티마이저
		미리 정해진 규칙에 따라 실행.
		Oracle 10g버전 부터는 RBO에 대한 지원 중단.

	2. 비용기반 옵티마이저(CBO)
		비용이 가장 낮은 실행계획을 선택.
--------------------------------------------------------------------------
JOIN
	여러 테이블에 흩어져 있는 정보 중
	사용자가 필요한 정보만 가져와서 가상의 테이블처럼 만들고 결과를 보여주는 것
	정규화를 통해 조회 테이블이 너무 많이 쪼개져 있으면
	작업이 불편하기 때문에 입력, 수정, 삭제의 성능을 향상시키기 위해서 JOIN을 통해 합친 후
	사용한다.

	- 내부 조인(INNER JOIN)
		조건이 일치하는 값만 합쳐서 조회
	



















