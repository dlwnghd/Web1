/*
 * PLAYER 테이블에서 전체 평균 키와 포지션별 평균 키 구하기
 *
 * CASE문
 * 
 * CASE 컬럼명 WHEN 값 THEN 컬럼명 또는 값 END
 * 
 * */

SELECT
   AVG(CASE "POSITION" WHEN 'GK' THEN HEIGHT END) GK,
   AVG(CASE "POSITION" WHEN 'DF' THEN HEIGHT END) DF,
   AVG(CASE "POSITION" WHEN 'FW' THEN HEIGHT END) FW,
   AVG(CASE "POSITION" WHEN 'MF' THEN HEIGHT END) MF,
   AVG(HEIGHT) "전체 평균키"
FROM PLAYER;

SELECT "POSITION", AVG(HEIGHT) FROM PLAYER
GROUP BY "POSITION";

/*
 *  SUB QUERY
 * 
 *       FROM 절 : IN LINE VIEW
 *       SELECT 절 : SCALAR
 *       WHERE 절 : SUB QUERY
 * 
 * */

 /*PLAYER 테이블에서 전체 평균 키와 포지션별 평균 키 구하기*/
SELECT "POSITION", AVG(HEIGHT), (SELECT AVG(HEIGHT) FROM PLAYER) "전체 평균키"
FROM PLAYER
WHERE "POSITION" IS NOT NULL
GROUP BY "POSITION";

/*PLAYER 테이블에서 TEAM_ID가 'K01'인 선수 중에서 POSITION이 'GK'인 선수*/
SELECT * FROM 
   (
      SELECT * FROM PLAYER WHERE TEAM_ID = 'K01'
   )
WHERE "POSITION" = 'GK'; 

/*PLAYER 테이블에서 TEAM_ID가 'K01'인 선수 중에서 POSITION이 'GK'인 선수*/
/*서브쿼리를 사용하지 않는다.*/
SELECT * FROM PLAYER
WHERE TEAM_ID = 'K01' AND "POSITION" = 'GK';

/*
 * SQL 실행 순서
 * 
 * FROM > WHERE > GROUP BY > HAVING > SELECT > ORDER BY
 * 
 * */

/*정남일 선수가 소속된 팀의 선수들 조회*/
SELECT TEAM_ID FROM PLAYER WHERE PLAYER_NAME = '정남일';

SELECT * FROM PLAYER
WHERE TEAM_ID = (SELECT TEAM_ID FROM PLAYER WHERE PLAYER_NAME = '정남일');

SELECT COUNT(TEAM_ID) FROM PLAYER
WHERE TEAM_ID = (SELECT TEAM_ID FROM PLAYER WHERE PLAYER_NAME = '정남일');

/*PLAYER 테이블에서 평균 키보다 작은 선수 검색*/
SELECT AVG(HEIGHT) FROM PLAYER;

SELECT PLAYER_NAME, HEIGHT FROM PLAYER
WHERE HEIGHT < (SELECT AVG(HEIGHT) FROM PLAYER);

SELECT MAX(HEIGHT)  FROM
(
   SELECT PLAYER_NAME, HEIGHT FROM PLAYER
   WHERE HEIGHT < (SELECT AVG(HEIGHT) FROM PLAYER)
);

/*경기장 중 경기 일정이 20120501 ~ 20120502 사이에 있는 경기장 전체 정보 조회(제시된 일정도 포함한다)*/
SELECT * FROM STADIUM;

SELECT STADIUM_ID FROM SCHEDULE
WHERE SCHE_DATE BETWEEN '20120501' AND '20120502';

SELECT * FROM STADIUM
WHERE STADIUM_ID IN
(
   SELECT STADIUM_ID FROM SCHEDULE
   WHERE SCHE_DATE BETWEEN '20120501' AND '20120502'
);

/*TCL버튼 클릭해서 None으로 변경한다*/

/*PLAYER 테이블에서 NICKNAME이 NULL인 선수들을 정태민 선수의 닉네임으로 바꾸기(다 하고 ROLLBACK)*/
SELECT NICKNAME FROM PLAYER
WHERE PLAYER_NAME = '정태민';

UPDATE PLAYER
SET NICKNAME = (SELECT NICKNAME FROM PLAYER WHERE PLAYER_NAME = '정태민')
WHERE NICKNAME IS NULL;

SELECT * FROM PLAYER
WHERE NICKNAME = (SELECT NICKNAME FROM PLAYER WHERE PLAYER_NAME = '정태민');

/*EMPLOYEES 테이블에서 평균 급여보다 낮은 사원들의 급여를 20% 인상(다 하고 ROLLBACK)*/
SELECT AVG(SALARY) FROM EMPLOYEES;

UPDATE EMPLOYEES
SET SALARY = SALARY * 1.2
WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES);

SELECT * FROM EMPLOYEES
WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES);

SELECT * FROM EMPLOYEES
WHERE FIRST_NAME = 'David';

/*PLAYER 테이블에서 평균 키보다 큰 선수들을 삭제(다 하고 ROLLBACK)*/
SELECT COUNT(*) FROM PLAYER
WHERE HEIGHT > (SELECT AVG(HEIGHT) FROM PLAYER);

/*261*/
SELECT COUNT(*) FROM PLAYER;

DELETE PLAYER
WHERE HEIGHT > (SELECT AVG(HEIGHT) FROM PLAYER);

/*
 * ROWNUM
 * 결과 행 앞에 1부터 1씩 증가하는 시퀀스를 붙여준다.
 * */
SELECT ROWNUM, EMPLOYEES.* FROM EMPLOYEES;

/*
 * AS
 * FROM절에서 사용 시에는 AS를 사용해서는 안되고 공백으로만 구분해야한다.
 * 
 * */
SELECT ROWNUM, E.* FROM EMPLOYEES E;









