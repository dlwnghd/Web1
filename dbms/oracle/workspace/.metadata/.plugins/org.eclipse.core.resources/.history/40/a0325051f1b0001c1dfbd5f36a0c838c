/*
 * 조합키(복합키)
 *       두 개 이상의 컬럼을 하나의 PK로 설정
 *       CONSTRAINT [제약조건 이름] PRIMARY KEY(컬럼명1, 컬럼명2,..)
 *       CONSTRAINT [제약조건 이름] FOREIGN KEY(컬럼명1, 컬럼명2,..) REFERENCES [부모 테이블명](부모컬럼명1, 부모컬럼명2,..)
 * 
 * */

SELECT * FROM TBL_FLOWER;
SELECT * FROM TBL_POT;

/*추가*/

/*장미, 빨간색, 1500원*/
INSERT INTO TBL_FLOWER
(FLOWER_NAME, FLOWER_COLOR, FLOWER_PRICE)
VALUES('장미', '빨간색', 1500);


/*장미, 핑크색, 1700원*/
INSERT INTO TBL_FLOWER
(FLOWER_NAME, FLOWER_COLOR, FLOWER_PRICE)
VALUES('장미', '핑크색', 1700);

/*해바라기, 노란색, 3500원*/
INSERT INTO TBL_FLOWER
(FLOWER_NAME, FLOWER_COLOR, FLOWER_PRICE)
VALUES('해바라기', '노란색', 3500);


ALTER TABLE TBL_POT MODIFY(POT_NUMBER VARCHAR2(1000));

/*APPLE001, GREEN, 사과모양, 장미*/
INSERT INTO TBL_POT
(POT_NUMBER, POT_COLOR, POT_SHAPE, FLOWER_NAME)
VALUES('APPLE001', 'GREEN', '사과모양', '장미');

/*POT001, WHITE, 원기둥, 해바라기*/
INSERT INTO TBL_POT
(POT_NUMBER, POT_COLOR, POT_SHAPE, FLOWER_NAME)
VALUES('POT001', 'WHITE', '원기둥', '해바라기');


/*POT002, BLACK, 직사각형, 해바라기*/
INSERT INTO TBL_POT
(POT_NUMBER, POT_COLOR, POT_SHAPE, FLOWER_NAME)
VALUES('POT002', 'BLACK', '직사각형', '해바라기');

SELECT * FROM TBL_FLOWER;
SELECT * FROM TBL_POT;

/*삭제*/

/*장미 삭제*/
SELECT FLOWER_NAME FROM TBL_FLOWER WHERE FLOWER_NAME = '장미';
DELETE FROM TBL_FLOWER WHERE FLOWER_NAME  = '장미';

/*1500원보다 비싼 꽃 삭제*/
SELECT * FROM TBL_FLOWER WHERE FLOWER_PRICE > 1500;
DELETE FROM TBL_FLOWER WHERE FLOWER_PRICE  > 1500;

/*장미를 담을 수 있는 화분 삭제*/
SELECT * FROM TBL_POT WHERE FLOWER_NAME = '장미';
DELETE FROM TBL_POT WHERE FLOWER_NAME  = '장미';

/*수정*/

/*빨간색 장미 가격 10% 인상*/
SELECT * FROM TBL_FLOWER WHERE FLOWER_NAME = '장미' AND FLOWER_COLOR = '빨간색';
UPDATE TBL_FLOWER
SET FLOWER_PRICE = FLOWER_PRICE * 1.1
WHERE FLOWER_NAME  = '장미' AND FLOWER_COLOR = '빨간색';

/*핑크색 장미 가격을 100배 인상*/
SELECT * FROM TBL_FLOWER WHERE FLOWER_COLOR  = '핑크색' AND FLOWER_NAME = '장미';
UPDATE TBL_FLOWER
SET FLOWER_PRICE = FLOWER_PRICE * 100
WHERE FLOWER_COLOR  = '핑크색' AND FLOWER_NAME = '장미';

/*직사각형인 화분을 정사각형으로 변경*/
SELECT FLOWER_NAME FROM TBL_POT WHERE POT_SHAPE  = '직사각형';
UPDATE TBL_POT
SET POT_SHAPE  = '정사각형'
WHERE POT_SHAPE  = '직사각형';

SELECT * FROM PLAYER;

/*PLAYER 테이블에서 TEAM_ID가 'K01'인 선수 검색*/
SELECT * FROM PLAYER WHERE TEAM_ID  = 'K01';

/*PLAYER 테이블에서 TEAM_ID가 'K01'이 아닌 선수 검색*/
SELECT * FROM PLAYER WHERE TEAM_ID  != 'K01';

/*PLAYER 테이블에서 WEIGHT가 70이상이고 80이하인 선수 검색*/
SELECT * FROM PLAYER WHERE WEIGHT  >= 70 AND WEIGHT  <= 80;
SELECT * FROM PLAYER WHERE WEIGHT  BETWEEN 70 AND 80;

/*PLAYER 테이블에서 TEAM_ID가 'K03'이고 HEIGHT가 180미만인 선수 검색*/
SELECT * FROM PLAYER WHERE TEAM_ID  = 'K03' AND HEIGHT < 180;

/*PLAYER 테이블에서 TEAM_ID가 'K06'이고 NICKNAME이 '제리'가 아닌 선수 검색*/
SELECT * FROM PLAYER WHERE TEAM_ID  = 'K06' AND NICKNAME != '제리';

/*PLAYER 테이블에서 HEIGHT가 170이상이고 WEIGHT가 80이상인 선수 이름 검색*/
SELECT * FROM PLAYER WHERE HEIGHT >= 170 AND WEIGHT >= 80;

/*STADIUM 테이블에서 SEAT_COUNT가 30000초과이고 41000이하인 경기장 검색*/
SELECT * FROM STADIUM WHERE SEAT_COUNT > 30000 AND SEAT_COUNT <= 41000;
SELECT * FROM STADIUM WHERE SEAT_COUNT BETWEEN 30001 AND 41000;

/*PLAYER 테이블에서 TEAM_ID가 'K02'이거나 'K07'이고 POSITION은 'MF'인 선수 검색*/
/*우선 순위는 AND가 OR보다 높다.*/
SELECT * FROM PLAYER WHERE (TEAM_ID = 'K02' OR TEAM_ID = 'K07') AND POSITION = 'MF';

/*IN이 AND보다 우선순위가 높다*/
SELECT * FROM PLAYER
WHERE TEAM_ID IN('K02','K07') AND "POSITION" = 'MF';

/*PLAYER 테이블에서 TEAM_ID가 'K01'인 선수 이름을 전부 내 이름으로 바꾸기*/
UPDATE PLAYER  
SET PLAYER_NAME  = '이주홍'
WHERE TEAM_ID = 'K01';

SELECT * FROM PLAYER WHERE TEAM_ID = 'K01';

/*COMMIT;*/
ROLLBACK;
COMMIT;

/*PLAYER 테이블에서 POSITION이 'MF'인 선수 삭제하기*/
DELETE FROM PLAYER WHERE POSITION  = 'MF';

/*PLAYER 테이블에서 HEIGHT가 180이상인 선수 삭제하기*/
DELETE FROM PLAYER WHERE HEIGHT  >= 180;

SELECT * FROM PLAYER WHERE POSITION  = 'MF';
SELECT * FROM PLAYER WHERE HEIGHT  >= 180;
ROLLBACK;




